@using test.DTOs
@model List<EmpregadosDTO>
@{
    ViewBag.Title = "Index";
    List<EmpregadosDTO> dados = ViewBag.ExibirEmpregados;
}
<br />
<br />
<div>
    <button type="button" class="btn btn-dark" data-toggle="modal" data-target="#cadastroModal" onclick="loadForm()"><span class="glyphicon glyphicon-plus"></span> Cadastrar</button>
</div>

<div class="modal fade" id="cadastroModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cadastro de Empregado</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body" id="bodyModal">
            </div>
            <div class="modal-footer mb-3">
                <button type="submit" class="btn btn-atualizar" onsubmit="() => Validate()" onclick="submitForm()"><span class="glyphicon glyphicon-ok" aria-hidden="true" style="color: #ffffff;"></span> Cadastrar</button>
                <button type="reset" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-ban-circle" aria-hidden="true" style="color: #000000;"></span> Cancelar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="edicaoModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edição de Empregado</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body" id="bodyModalEdicao">

            </div>
            <div class="modal-footer mb-3">
                <button type="submit" class="btn btn-atualizar" onsubmit="() => ValidateEdition()" onclick="submitFormEdicao()"><span class="glyphicon glyphicon-ok" aria-hidden="true" style="color: #ffffff;"></span> Editar</button>
                <button type="reset" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-ban-circle" aria-hidden="true" style="color: #000000;"></span> Cancelar</button>
            </div>
        </div>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th scope="col">Nome</th>
            <th scope="col">CPF</th>
            <th scope="col">RG/Passaporte</th>
            <th scope="col">DataNascimento</th>
            <th scope="col">DataUltimaASO</th>
            <th scope="col">Setor</th>
            <th scope="col">Secto</th>
            <th scope="col">Função</th>
            <th scope="col">Function</th>
            <th scope="col">Empresa</th>
            <th scope="col">CNPJ</th>
            <th scope="col">Atv. Economica</th>
            <th scope="col">Cidade</th>
            <th scope="col">Estado</th>
            <th scope="col">Editar/Apagar</th>
        </tr>
    </thead>
    <tbody id="corpoTabelaEmpregados">
        @foreach (var dado in dados)
        {
            <tr data-empresa="@dado.Empresa" id="listaEmpregados">
                <td scope="row">@dado.Nome</td>
                <td>@dado.CPF</td>
                <td>@dado.RGPassaporte</td>
                <td>@dado.DataNascimento</td>
                <td>@dado.UltimoASO</td>
                <td>@dado.NomeSetor</td>
                <td>@dado.NomeSetorIngles</td>
                <td>@dado.NomeFuncao</td>
                <td>@dado.NomeFuncaoIngles</td>
                <td>@dado.RazaoSocial</td>
                <td>@dado.CNPJ</td>
                <td>@dado.AtividadeEconomica</td>
                <td>@dado.Cidade</td>
                <td>@dado.Estado</td>
                <td style="display: flex; justify-content: space-around;">
                    <button type="button" class="btn btn-sm btn-warning" data-toggle="modal" data-target="#edicaoModal" onclick="loadFormEdicao(@dado.ID)" id="btnConfirmar"><span class="glyphicon glyphicon-pencil" aria-hidden="true" style="color: #fff;"></span></button>
                    <button type="button" class="btn btn-sm btn-danger" onclick="btnDeleteEmpregados(@dado.ID,'@dado.Nome')" id="btnApagar"><span class="glyphicon glyphicon-remove" aria-hidden="true" style="color: #fff;"></span></button>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    async function loadForm() {
        const urlFormulario = '/EmpregadosDTO/Criar';

        let response = await fetch(urlFormulario);
        let parsedResponse = await response.text();

        document.getElementById('bodyModal').innerHTML = parsedResponse;
    }
    async function loadFormEdicao(empregadoID) {
        const urlFormulario = `/EmpregadosDTO/Editar?id=${empregadoID}`;

        let response = await fetch(urlFormulario);
        let parsedResponse = await response.text();

        document.getElementById('bodyModalEdicao').innerHTML = parsedResponse;

    }
    const apiURL = 'https://servicodados.ibge.gov.br/api/v1/localidades/municipios';
    async function getCidade() {
        const selectCidade = document.getElementById('cidade');
        try {
            const response = await fetch(apiURL);

            if (response.ok) {
                const cidades = await response.json();

                cidades.forEach((cidade) => {
                    const option = document.createElement('option');
                    option.value = cidade.Nome;
                    option.text = cidade.nome;
                    selectCidade.appendChild(option);
                });

            } else {
                console.error('Erro ao buscar cidades:', response.status, response.statusText);
            }
        } catch (error) {
            console.error('Erro na solicitação:', error);
        }
    }
    window.addEventListener('load', getCidade);
    function submitForm() {
        const form = document.getElementById('form');

        if (!form) {
            console.error("Formulário não encontrado")
            return;
        }
        var isValid = Validate();
        if (isValid) {
            const empregados = {
                CPF: document.getElementById('cpf').value,
                Empresa: document.getElementById('selected').value,
                Nome: document.getElementById('nome').value,
                RGPassaporte: document.getElementById('rg-passaporte').value,
                MatriculaESocial: document.getElementById('matricula-e-social').value,
                NitPisPasep: document.getElementById('nit-pis-pasep').value,
                NomeMae: document.getElementById('nome-mae').value,
                Nacionalidade: document.getElementById('nacionalidade').value,
                DataNascimento: document.getElementById('data-nascimento').value,
                UltimoASO: document.getElementById('ultimo-aso').value,
                Email: document.getElementById('email').value,
                Celular: document.getElementById('celular').value,
                Sexo: document.getElementById('sexo').value,
                TipoSanguineo: document.getElementById('tipo-sanguineo').value,
                NomeFuncao: document.getElementById('funcao').value,
                NomeSetor: document.getElementById('setor').value,
                CodCategoriaeSocial: document.getElementById('cod-categoria-e-social').value,
                Ativo: document.getElementById('ativo').checked

            };
            const json = JSON.stringify(empregados);
            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: "/MultiEmpresas/Salvar",
                data: json,
                processData: false,
                cache: false,
                timeout: 800000
            });
            setTimeout(() => window.location.reload(), 500);
        } else {
            console.log("Formulario inválido! Verifique os campos");
        }
    }
    function submitFormEdicao() {
        const form = document.getElementById('formEdicao');
        if (!form) {
            console.error("Formulario não encontrado")
            return;
        }
        var isValid = ValidateEdition();
        if (isValid) {
            event.preventDefault();
            const empregadosEdicaoME = {
                ID: document.getElementById('id-edicao').value,
                CPF: document.getElementById('cpf-edicao').value,
                Empresa: document.getElementById('selected-edicao').value,
                Nome: document.getElementById('nome-edicao').value,
                RGPassaporte: document.getElementById('rg-passaporte-edicao').value,
                DataNascimento: document.getElementById('data-nascimento-edicao').value,
                UltimoASO: document.getElementById('ultimo-aso-edicao').value,
                NomeFuncao: document.getElementById('funcao-edicao').value,
                NomeSetor: document.getElementById('setor-edicao').value
            };
            const json = JSON.stringify(empregadosEdicaoME);
            $("btnConfirmar").prop("disabled", true);
            $("btnApagar").prop("disabled", true);
            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: "/EmpregadosDTO/Alterar",
                data: json,
                processData: false,
                cache: false,
                timeout: 800000
            });
            setTimeout(() => window.location.reload(), 500);
        } else {
            console.log("Formulario inválido! Verifique os campso");
        }
    }
    function btnDeleteEmpregados(empregadoID, empregadoNome) {
        if (confirm(`Deseja realmente deletar o ${empregadoNome}?`)) {
            var json = { empregadoID: empregadoID }
            $.ajax({
                type: "DELETE",
                contentType: "application/json",
                url: `/EmpregadosDTO/Apagar`,
                data: JSON.stringify(json),
                processData: false,
                cache: false,
                timeout: 800000
            });
            setTimeout(() => window.location.reload(), 500);
        }
    }
</script>

